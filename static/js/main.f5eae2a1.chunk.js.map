{"version":3,"sources":["components/Wrapper/index.js","components/Title/index.js","components/Card/index.js","components/Instructions/index.js","components/Score/index.js","App.js","index.js"],"names":["Wrapper","props","className","children","Title","Card","id","onClick","alt","name","src","image","Instructions","Score","score","highscore","charArr","characters","shuffle","arr","sort","Math","random","App","state","handleClick","event","preventDefault","thisCharId","target","index","findIndex","element","parseInt","isclicked","alert","map","x","setState","this","key","Component","ReactDOM","render","document","getElementById"],"mappings":"yuCAOeA,MAJf,SAAiBC,GACf,OAAO,yBAAKC,UAAU,kCAAkCD,EAAME,W,MCKjDC,MANf,SAAeH,GACb,OACA,wBAAIC,UAAU,SAASD,EAAME,W,MCQhBE,MAVf,SAAcJ,GACZ,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKI,GAAIL,EAAMK,GAAIC,QAASN,EAAMM,QAASC,IAAG,UAAKP,EAAMQ,KAAX,sBAAqCC,IAAKT,EAAMU,W,MCAvFC,MAJf,SAAsBX,GACpB,OAAO,yBAAKC,UAAU,uCAAuCD,EAAME,W,aCQtDU,MATf,SAAeZ,GACb,OACE,yBAAKC,UAAU,SACjB,6CAAmBD,EAAMa,OACzB,kDAAwBb,EAAMc,aCE5BC,EAAUC,EAGd,SAASC,EAAQC,GACfA,EAAIC,MAAK,kBAAMC,KAAKC,SAAW,M,IAuElBC,E,4MAjEbC,MAAQ,CACNV,MAAO,EACPC,UAAW,G,EAUbU,YAAc,SAACC,GACbA,EAAMC,iBACN,IAAIC,EAAaF,EAAMG,OAAOvB,GAC1BwB,EAAQd,EAAQe,WAAU,SAASC,GACrC,OAAOA,EAAQ1B,KAAO2B,SAASL,EAAY,OAEZ,SAA7BZ,EAAQc,GAAOI,WACjBC,MAAM,uDACNnB,EAAQoB,KAAK,SAAAC,GACX,OAAOA,EAAEH,UAAY,WAEnB,EAAKV,MAAMT,UAAY,EAAKS,MAAMV,OACpC,EAAKwB,SAAS,CACZvB,UAAW,EAAKS,MAAMV,QAG1B,EAAKwB,SAAS,CACZxB,MAAO,IAETI,EAAQF,KAERA,EAAQc,GAAOI,UAAY,OAC3B,EAAKI,SAAS,CACZxB,MAAO,EAAKU,MAAMV,MAAQ,IAE5BI,EAAQF,K,kEA7BVE,EAAQF,K,+BAkCF,IAAD,OACP,OAAS,yBAAKd,UAAU,iCACxB,kBAAC,EAAD,KACE,kBAAC,EAAD,4BACA,6BACA,kBAAC,EAAD,iFACA,6BACA,kBAAC,EAAD,CAAOY,MAAOyB,KAAKf,MAAMV,MAAOC,UAAWwB,KAAKf,MAAMT,YACrDC,EAAQoB,KAAK,SAAAC,GAAC,OACb,kBAAC,EAAD,CACA/B,GAAI+B,EAAE/B,GACNkC,IAAKH,EAAE/B,GACPG,KAAM4B,EAAE5B,KACRE,MAAO0B,EAAE1B,MACTJ,QAAS,EAAKkB,uB,GA1DFgB,a,MCZlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f5eae2a1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper justify-content-center\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n  <h1 className=\"title\">{props.children}</h1>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img id={props.id} onClick={props.onClick} alt={`${props.name} from bobs burgers`} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Instructions(props) {\n  return <div className=\"instructions justify-content-center\">{props.children}</div>;\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return (\n    <div className=\"score\">\n  <h3>Your Score is {props.score}</h3>\n  <h3>Your High Score is {props.highscore}</h3>\n  </div>\n  );\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Card from \"./components/Card\";\nimport Instructions from \"./components/Instructions\";\nimport characters from \"./characters.json\";\nimport Score from \"./components/Score\";\n\n\nlet charArr = characters;\n\n\nfunction shuffle(arr) {\n  arr.sort(() => Math.random() - 0.5);\n};\n\n\nclass App extends Component {\n  // Setting the component's initial state.\n  state = {\n    score: 0,\n    highscore: 0\n\n  };\n\n  // When the component mounts, shuffle the array the cards pull from.\n  componentDidMount() {\n    shuffle(charArr);\n  }\n\n  // Event handler for when a card is clicked.\n  handleClick = (event) => {\n    event.preventDefault();\n    let thisCharId = event.target.id;\n    let index = charArr.findIndex(function(element) { \n      return element.id === parseInt(thisCharId, 10)} );\n\n    if (charArr[index].isclicked === \"true\") {\n      alert(\"You already clicked that one! Game over, try again!\");\n      charArr.map( x => {\n        return x.isclicked = \"false\"\n      });\n      if (this.state.highscore < this.state.score) {\n        this.setState({\n          highscore: this.state.score\n        });\n      }\n      this.setState({\n        score: 0\n      });\n      shuffle(charArr);\n    } else{\n      charArr[index].isclicked = \"true\";\n      this.setState({\n        score: this.state.score + 1\n      });\n      shuffle(charArr);\n    }\n   };\n  \n\nrender() {\n  return ( <div className=\"d-flex justify-content-center\">\n  <Wrapper>\n    <Title >Clicky Memory Game!</Title> \n    <br />\n    <Instructions>Click a character and get a point. Don't click the same character twice!</Instructions>\n    <br />\n    <Score score={this.state.score} highscore={this.state.highscore}></Score>\n    {charArr.map( x => (\n      <Card\n      id={x.id}\n      key={x.id}\n      name={x.name}\n      image={x.image}\n      onClick={this.handleClick}\n    />\n    ))}\n    </Wrapper>\n    </div>\n  );\n}\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}